- name: Check Docker install
  stat:
    path: /usr/bin/docker
  tags: packages, kubernetes
  register: docker_installed

- name: Check Kubernetes install
  stat:
    path: /usr/local/bin/kubectl
  tags: packages, kubernetes
  register: kubernetes_installed

- name: Configure persistent loading of modules
  become: yes
  copy:
    dest: /etc/modules-load.d/containerd.conf
    content: |
      overlay
      br_netfilter

- name: Add apt key for Docker
  become: yes
  apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    state: present
  tags: packages, kubernetes

- name: Add apt repository for Docker
  become: yes
  apt_repository:
    repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu focal stable
    state: present
  tags: packages, kubernetes
  register: docker_repo

- name: Install Docker and friends
  apt:
    name:
      - docker-ce
      - docker-ce-cli
      - containerd.io
    state: present
    autoclean: yes
  tags: packages, kubernetes
  when: docker_installed.stat.exists == false

- name: Create kubernetes user and add to group
  user:
    name: "{{ kube_user }}"
    groups:
      - docker
      - sudo
    state: present
  tags: packages, kubernetes

- name: Add apt key for google cloud
  become: yes
  apt_key:
    url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
    state: present
  tags: packages, kubernetes

- name: Add apt repository for google cloud
  become: yes
  apt_repository:
    repo: deb http://apt.kubernetes.io/ kubernetes-xenial main
    state: present
  tags: packages, kubernetes

- name: Install kubernetes packages
  apt:
    name:
      - kubeadm
      - kubelet
      - kubectl
    state: present
    autoclean: yes
  tags: packages, kubernetes

# -https://germaniumhq.com/2019/02/14/2019-02-14-Disabling-Swap-for-Kubernetes-in-an-Ansible-Playbook/
- name: Disable SWAP since kubernetes can't work with swap enabled (1/2)
  shell: |
    swapoff -a

- name: Disable SWAP in fstab since kubernetes can't work with swap enabled (2/2)
  replace:
    path: /etc/fstab
    regexp: '^([^#].*?\sswap\s+sw\s+.*)$'
    replace: '# \1'

- name: Enable overlayfs, netfilter for VLAN
  become: yes
  command: "{{ item }}"
  with_items:
    - modprobe overlay
    - modprobe br_netfilter

- name: Configure sysctl
  copy:
    dest: /etc/sysctl.d/kubernetes.conf
    content: |
      net.bridge.bridge-nf-call-ip6tables = 1
      net.bridge.bridge-nf-call-iptables = 1
      net.ipv4.ip_forward = 1

- name: Make systemd docker directory
  file:
    path: /etc/systemd/system/docker.service.d
    state: directory
  register: systemd_docker

- name: Create daemon json config
  copy:
    dest: /etc/docker/daemon.json
    src: "{{ playbook_dir }}/roles/kubernetes/files/daemon.json"
  when: systemd_docker.changed == true

- name: Daemon reload
  become: yes
  command: systemctl daemon-reload
  when: systemd_docker.changed == true

- name: Start Docker
  become: yes
  service:
    name: docker
    state: started
    use: service
  tags: kubernetes

- name: Reload sysctl
  become: yes
  command: sysctl --system
  when: systemd_docker.changed == true

# Installing CRI-O
- name: Add apt repository for cri-o-1.17
  become: yes
  apt_repository:
    repo: deb http://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/xUbuntu_20.04/ /
    state: present
    update_cache: no
    filename: /etc/apt/sources.list.d/devel:kubic:libcontainers:stable
  tags: packages, kubernetes

- name: Add crio repository
  become: yes
  apt_repository:
    repo: deb http://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable:/cri-o:/1.17/xUbuntu_20.04/ /
    state: present
    filename: /etc/apt/sources.list.d/devel:kubic:libcontainers:stable:cri-o:1.17
    update_cache: no
  tags: packages, kubernetes

- name: Add apt key for opensuse
  become: yes
  apt_key:
    url: https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/xUbuntu_20.04/Release.key
    state: present
  tags: packages, kubernetes

- name: Add apt key for cri-o
  become: yes
  apt_key:
    url: https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable:/cri-o:/1.17/xUbuntu_20.04/Release.key
    state: present
  tags: packages, kubernetes

- name: Install cri-o-1.17
  apt:
    name:
      - cri-o
      - cri-o-runc
    state: present
    autoclean: yes
    update_cache: yes
  tags: packages, kubernetes
  register: crio_installed

- name: Daemon reload
  become: yes
  command: systemctl daemon-reload
  when: crio_installed.changed == true

- name: Start crio
  become: yes
  service:
    name: crio
    state: started
    use: service
  tags: kubernetes
  when: crio_installed.changed == true

# Installing ContainerD
- name: Configure containerd
  file:
    path: /etc/containerd
    state: directory
  register: configure_containerd

- name: Set default containerd config path
  become: yes
  command: containerd config default /etc/containerd/config.toml

- name: Restart containerd
  service:
    name: containerd
    state: restarted